<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- enable Method level [vs URL level] authorization  This work for APPLICATION Level scanned components
          Does NOT recognize WEB level components - for THAT  need to place enable line in Dispatcher-servlet-->
    <security:global-method-security pre-post-annotations="enabled"/>
    <!--  Use ControllerAdice for Access denied -->
    <!-- security:http enables security filter mechanism...name space configuration is activated -->
    <!-- use-expressions enables URL level authorization -->
    <security:http auto-config="true">

        <!-- Need to redirect exception for web authorization -->
        <security:access-denied-handler error-page="/error-forbidden"/>

        <!-- Implemented with Web based URL - Controller "METHOD" level authorization -->
        <!-- the more specific rules need to come first, followed by the more general ones. -->
        <!-- COMmENT out the following to see @Service METHOD level authorization -->
        <security:intercept-url pattern="/members/add" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/members" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>

        <!-- always-use-default-target overrides where login was triggered -->
        <!-- logout-url renames j_security_logout URL -->
        <!-- similarly username,password,Login-processing  renames j_security_* stuff -->
        <!-- e.g., /j_spring_security_check is default login-processing-url-->
        <!-- Comment out login-page through logoinfailed for BASIC -->
        <security:form-login login-page="/login"
                             default-target-url="/welcome"
                             login-processing-url="/postLogin"
                             authentication-failure-url="/loginfailed"
                             username-parameter="username"
                             password-parameter="password"
                             always-use-default-target="true"/>
        <security:logout logout-success-url="/logout" logout-url="/doLogout"/>

        <!-- BY DEFAULT the URL /j_spring_security_logout triggers logout
        NOTE: is it JUST a URL naming convention - no mapping is required
                logout-url= "/doLogout" REPLACES it -->
    </security:http>


    <!--<security:authentication-manager>-->
        <!--<security:authentication-provider ref="daoAuthenticationProvider" />-->
    <!--</security:authentication-manager>-->

    <!--<bean id="daoAuthenticationProvider"-->
          <!--class="org.springframework.security.authentication.dao.DaoAuthenticationProvider" >-->
        <!--<property name="userDetailsService" ref="authUserDetailsServiceImpl" />-->
    <!--</bean>-->

    <!--<security:authentication-manager>-->
        <!--<security:authentication-provider>-->
            <!--<security:password-encoder ref="bcrypt"/>-->
            <!--<security:jdbc-user-service-->
                    <!--data-source-ref="dataSource"-->
                    <!--users-by-username-query="select username,password from users where username=?" authorities-by-username-query="select u.username, r.authority from users u, roles r where u.userid = r.userid and u.username =?"/>-->
        <!--</security:authentication-provider>-->
    <!--</security:authentication-manager>-->

    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="user" password="user" authorities="ROLE_USER" />
            </security:user-service>
            <!--<security:password-encoder ref="bcrypt" />-->
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="bcrypt"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    </bean>
    <!-- <security:authentication-manager>
        <security:authentication-provider>
            <password-encoder hash="bcrypt" />
            <security:user-service>
                <security:user name="admin" password="admin" authorities="ROLE_ADMIN" />
                <security:user name="guest" password="guest" authorities="ROLE_USER" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager> -->
</beans>
