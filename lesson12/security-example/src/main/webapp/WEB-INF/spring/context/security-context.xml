<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">
    <!-- enable Method level [vs URL level] authorization  This work for APPLICATION Level scanned components
              Does NOT recognize WEB level components - for THAT  need to place enable line in Dispatcher-servlet-->
    <global-method-security pre-post-annotations="enabled"/>
    <!--  Use ControllerAdice for Access denied -->
    <!-- http enables security filter mechanism...name space configuration is activated -->
    <!-- use-expressions enables URL level authorization -->
    <http auto-config="true" use-expressions="true">

        <!-- Need to redirect exception for web authorization -->
        <access-denied-handler error-page="/error-forbidden"/>

        <!-- Implemented with Web based URL - Controller "METHOD" level authorization -->
        <!-- the more specific rules need to come first, followed by the more general ones. -->
        <!-- COMmENT out the following to see @Service METHOD level authorization -->
        <intercept-url pattern="/members/add" access="hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/members" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>

        <!-- always-use-default-target overrides where login was triggered -->
        <!-- logout-url renames j_security_logout URL -->
        <!-- similarly username,password,Login-processing  renames j_security_* stuff -->
        <!-- e.g., /j_spring_security_check is default login-processing-url-->
        <!-- Comment out login-page through logoinfailed for BASIC -->
        <form-login login-page="/login"
                    login-processing-url="/postLogin"
                    username-parameter="username"
                    password-parameter="password"
                    default-target-url="/welcome"
                    always-use-default-target="true"
                    authentication-failure-url="/loginfailed"/>
        <logout logout-success-url="/logout" logout-url="/doLogout"/>

        <!-- BY DEFAULT the URL /j_spring_security_logout triggers logout
        NOTE: is it JUST a URL naming convention - no mapping is required
                logout-url= "/doLogout" REPLACES it -->
    </http>


    <!--<authentication-manager>
        <authentication-provider>
            <password-encoder hash="bcrypt"/>
            <jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="select username,password,enabled from users where username=?"
                    authorities-by-username-query="select u1.username, u2.authority from users u1, authorities u2 where u1.username = u2.username and u1.username =?"/>
        </authentication-provider>
    </authentication-manager>-->


    <authentication-manager>
        <authentication-provider>
            <!--<password-encoder hash="bcrypt"/>-->
            <user-service>
                <user name="admin" password="admin" authorities="ROLE_ADMIN"/>
                <user name="guest" password="guest" authorities="ROLE_USER"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>
</beans:beans>
